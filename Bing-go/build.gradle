/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'admin' at '1/28/17 7:04 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'gs-accessing-mongodb-data-rest'
    version = '0.1.0'
}

version = '1.0'
//create a single Jar with all dependencies
//task fatJar(type: Jar) {
//	manifest {
//        attributes 'Implementation-Title': 'Gradle Jar File Example',
//        	'Implementation-Version': version,
//        	'Main-Class': 'com.go.bing.controller.Binggo'
//    }
//    baseName = project.name + '-all'
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    ivy {
      name = 'AngularJS'
      url = 'https://code.angularjs.org/'
      layout 'pattern', {
         artifact '[revision]/[module](.[classifier]).[ext]'
      }
   }
}

configurations {
   angular
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
	angular group: 'angular', name: 'angular', version: '1.3.9', classifier: 'min', ext: 'js'
    
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'javax.persistence', name: 'persistence-api', version: '1.0'
	
	// https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.4.1'
	
	// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.5'

	compile 'org.springframework.data:spring-data-rest-webmvc:2.6.3.RELEASE'
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
	compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.webjars:angularjs:1.4.9")
    compile("org.webjars:bootstrap:3.3.6")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

//task fetch(type: Copy) {
//   from configurations.angular
//   into 'src/main/webapp/js'
//   rename {
//      'angular.js'
//   }
//}
